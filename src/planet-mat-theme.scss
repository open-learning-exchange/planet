@use '@angular/material' as mat;
@import '@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
/* TODO(mdc-migration): Remove all-legacy-component-typographies once all legacy components are migrated*/
@include mat.all-legacy-component-typographies();
@include mat.all-component-typographies();
/* TODO(mdc-migration): Remove legacy-core once all legacy components are migrated*/
@include mat.legacy-core();
@include mat.core();
@import './app/_variables';

/* TODO(mdc-migration): Remove all-legacy-component-themes once all legacy components are migrated*/
@include mat.all-legacy-component-themes($planet-app-theme);

@include mat.all-component-themes($planet-app-theme);

// Create sub-themes for the different sections which change the accent color.
$accent-map: (
  library: mat.define-palette(mat.$pink-palette, $accent-hue),
  courses: mat.define-palette(mat.$orange-palette, $accent-hue),
  meetups: mat.define-palette(mat.$purple-palette, $accent-hue),
  teams: mat.define-palette(mat.$green-palette, $accent-hue)
);

@each $section in library, courses, meetups, teams {
  $accent-palette: map-get($accent-map, #{$section});
  $theme: mat.define-light-theme($planet-app-primary, $accent-palette, $planet-app-warn);
  .planet-#{$section}-theme {
    /* TODO(mdc-migration): Remove all-legacy-component-themes once all legacy components are migrated*/
    @include mat.all-legacy-component-themes($theme);
    @include mat.all-component-themes($theme);

    .accent-color {
      background-color: mat.get-color-from-palette($accent-palette, $accent-hue);
      color: mat.get-contrast-color-from-palette($accent-palette, $accent-hue);
    }
  }
}

// Custom themed material styles below

/* TODO(mdc-migration): The following rule targets internal classes of button that may no longer apply for the MDC version.*/
.mat-button-toggle-checked {
  background-color: mat.get-color-from-palette($planet-app-primary, $light-hue);
  color: mat.get-contrast-color-from-palette($planet-app-primary, $light-hue);
}

.mat-mdc-raised-button[color="primary"] {
  transition: background-color 0.3s ease;
  &:hover {
    background-color: mat.get-color-from-palette($planet-app-primary, $dark-hue);
  }
}

.mat-mdc-raised-button[color="primary"][disabled] {
  pointer-events: none;
}
